plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "kotlin-kapt"
    id 'com.google.devtools.ksp'
    id 'androidx.navigation.safeargs'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.natiqhaciyef.kotlinandroidknowledges'
    compileSdk 34

    defaultConfig {
        applicationId "com.natiqhaciyef.kotlinandroidknowledges"
        minSdk 28
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        testInstrumentationRunner = "com.natiqhaciyef.witapplication.util.HiltTestRunner"

        buildConfigField("String","BASE_URL",MY_URL)
    }

    buildTypes {
        release {
//            isShrinkResources = false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += 'META-INF/INDEX.LIST' // Add this line
            excludes += 'META-INF/DEPENDENCIES' // And this line
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xjvm-default=all"
        ]
    }
    buildFeatures {
        viewBinding true
        dataBinding true
        buildConfig true
    }
}

dependencies {
    implementation project(':custom-annotations')
    implementation 'androidx.activity:activity:1.9.1'
    def lifecycleVersion = "2.5.1"
    def retrofitVersion = '2.9.0'
    def fragmentVersion = "1.5.2"
    def navVersion = "2.5.2"
    def rxJavaVersion = '2.1.1'
    def epoxyVersion = '5.1.3'
    def workVersion = "2.8.1"
    def exoPlayer = "2.18.7"

    implementation(project(":custom-annotations"))
    kapt project(':custom-annotations')

    implementation project(":custom-annotations")
    ksp project(":custom-annotations")

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // Room db
    implementation "androidx.room:room-runtime:2.5.0"
    kapt "androidx.room:room-compiler:2.5.0"
    implementation "androidx.room:room-ktx:2.5.0"

    // RxJava 3
    implementation("androidx.room:room-rxjava3:2.5.1")       //rxjava
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxJavaVersion"

    // Navigation
    implementation("androidx.navigation:navigation-fragment-ktx:$navVersion")
    implementation("androidx.navigation:navigation-ui-ktx:$navVersion")

    // Fragment ktx
    implementation("androidx.fragment:fragment-ktx:$fragmentVersion")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion")

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    // View Model Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    // Live Data
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // Image loader library
    implementation 'com.squareup.picasso:picasso:2.8'
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    kapt 'com.github.bumptech.glide:compiler:4.13.2'

    // Retrofit library - Logging
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.moshi:moshi-kotlin:1.14.0"
    implementation 'com.squareup.moshi:moshi:1.14.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    // Dagger hilt implementation
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-android-compiler:2.44"

    implementation 'com.squareup:kotlinpoet:1.4.4'

    // Animation Library & ViewPager2
    implementation "com.airbnb.android:lottie:5.2.0"
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    // Epoxy UI
    implementation "com.airbnb.android:epoxy:$epoxyVersion"
    annotationProcessor "com.airbnb.android:epoxy-processor:$epoxyVersion"

    // Work manager
    implementation "androidx.work:work-runtime-ktx:$workVersion"

    // Data store Preferences
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    // Lifecycle component & Kotlin coroutines components
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    // dependency for exoplayer
    implementation "com.google.android.exoplayer:exoplayer:$exoPlayer"
    implementation "com.google.android.exoplayer:exoplayer-core:$exoPlayer"
    implementation "com.google.android.exoplayer:exoplayer-dash:$exoPlayer"
    implementation "com.google.android.exoplayer:exoplayer-hls:$exoPlayer"
    implementation "com.google.android.exoplayer:exoplayer-smoothstreaming:$exoPlayer"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoPlayer"

    // reflection
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.9.23"

    // ksp
    implementation "com.google.devtools.ksp:symbol-processing-api:1.6.20-1.0.5"

    // palm api dependencies
//    implementation("com.google.cloud:gapic-google-cloud-ai-generativelanguage-v1beta3-java:0.0.0-SNAPSHOT")
//    implementation("io.grpc:grpc-okhttp:1.53.0")

    // this one is needed by Android's Jetpack Compose
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1")

    // TestImplementations
    implementation("androidx.test:core:1.5.0")
    testImplementation("junit:junit:4.13.2")
    testImplementation("org.hamcrest:hamcrest-all:1.3")
    testImplementation("androidx.arch.core:core-testing:2.1.0")
    testImplementation("org.robolectric:robolectric:4.8.1")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4")
    testImplementation("com.google.truth:truth:1.1.3")
    testImplementation("org.mockito:mockito-core:4.7.0")
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'

    // Android Test Implementations
    androidTestImplementation("junit:junit:4.13.2")
    androidTestImplementation("org.mockito:mockito-android:4.7.0")
    androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4")
    androidTestImplementation("androidx.arch.core:core-testing:2.1.0")
    androidTestImplementation("com.google.truth:truth:1.1.3")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
    androidTestImplementation("org.mockito:mockito-core:4.7.0")
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.43.2")
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.5.4")
    debugImplementation("androidx.compose.ui:ui-test-manifest:1.5.4")

    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.44")
    debugImplementation("androidx.fragment:fragment-testing:1.3.0-alpha08")
    kaptTest("com.google.dagger:hilt-android-compiler:2.44")
//    implementation("androidx.emoji2:emoji2-views-helper:1.4.0")

//    androidTestImplementation("androidx.test.espresso:espresso-contrib:3.5.1") {
//        exclude(group = "org.checkerframework", module = "checker")
//    }
//
//    implementation("com.google.protobuf:protobuf-kotlin:3.21.7") {
//        exclude(group = "com.google.protobuf", module = "protobuf-java")
//    }

}

kapt {
    correctErrorTypes = true
}


kapt {
    correctErrorTypes = true
}